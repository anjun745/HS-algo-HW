{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":83972096},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1603416852160,"exec_count":4,"id":"c2b2f5","input":"### Your code to Determine which artists have the most similar tastes to matt and to you in colors\n### List the top 10 artists to you with the most similar as #1 \n\nMATTS_FAVS = [3, 6, 0, 12, 7, 8, 14, 18, 1, 19, 4, 9, 2, 10, 11, 5, 16, 13, 15, 17]\n\nYOUR_FAVS = [8, 16, 14, 12, 17, 7, 6, 10, 4, 5, 0, 15, 1, 18, 2, 11, 3, 9, 13, 19]\n","kernel":"python3","pos":4,"start":1603416852152,"state":"done","type":"cell"}
{"cell_type":"code","end":1603416853185,"exec_count":5,"id":"60f8be","input":"def get_inversion_count(Arr, B):\n    '''\n    does a merge sort and counts inversions\n    inputs: the array/list, the comparing array\n    outputs: array sorted into the comparing array and inversion count\n    '''\n    len_ = len(Arr)\n    \n    # dealing with the base case\n    if len_ == 1:\n        return Arr, 0\n    \n    else:\n        # the recursive call up-front, like previous mergesort algorithm\n        arr_l = get_inversion_count(Arr[:len_//2], B)\n        arr_r = get_inversion_count(Arr[len_//2:], B)\n        # due to the returnings being different, I had to assign the variables differently\n        arr_l_li, len_l, arr_r_li, len_r = arr_l[0], len(arr_l[0]), arr_r[0], len(arr_r[0])\n        # the inversion counts from previous recursions\n        c = arr_l[1] + arr_r[1]\n        \n        Arr = []\n        \n        # due to the need for an inversion count, I decided to not use the pop/append method, but use indexes to identify inversions\n        l_ind = 0\n        r_ind = 0\n        for ele in range(len_):\n            # first 2 makes sure no index out of bounds, if all these variables are being added after the other list is finished\n            # there would be no inversions either of these 2 should happen, as even if only the left remains, all the inversions would\n            # have been accounted for\n            if l_ind == len_l:\n                Arr.append(arr_r_li[r_ind])\n                r_ind += 1\n                continue\n            elif r_ind == len_r:\n                Arr.append(arr_l_li[l_ind])\n                l_ind += 1\n                continue\n                \n            # instead of comparing value, compare index on the comparison list\n            if B.index(arr_r_li[r_ind]) < B.index(arr_l_li[l_ind]):\n                c += len(arr_l_li) - l_ind\n                Arr.append(arr_r_li[r_ind])\n                r_ind += 1\n            # otherwise just left item on and increase the index count\n            else:\n                Arr.append(arr_l_li[l_ind])\n                l_ind += 1\n            \n        return Arr, c","kernel":"python3","pos":5,"start":1603416853178,"state":"done","type":"cell"}
{"cell_type":"code","end":1603416854237,"exec_count":6,"id":"9403eb","input":"a = []\nprint(\"Matt's top 10\")\nfor p in ARTIST_RANKINGS:\n    a.append((get_inversion_count(ARTIST_RANKINGS[p], MATTS_FAVS)[1], p))\n    \nfor b in sorted(a)[:10]:\n    print(b)\n    \nprint(\"\\nAndy's top 10\")\nm = []\nfor p in ARTIST_RANKINGS:\n    m.append((get_inversion_count(ARTIST_RANKINGS[p], YOUR_FAVS)[1], p))\n    \nfor b in sorted(m)[:10]:\n    print(b)","kernel":"python3","output":{"0":{"name":"stdout","text":"Matt's top 10\n(67, 'Alicia Keys')\n(75, 'Bruno Mars')\n(75, 'Cindy Sherman')\n(76, 'Adele')\n(76, 'Auguste Rodin')\n(76, 'Snoop Dogg')\n(77, 'Ed Sheeran ')\n(77, 'P!nk')\n(78, 'Henri Cartier-Bresson')\n(80, 'Andy Warhol')\n\nAndy's top 10\n(63, 'Jay-Z')\n(73, 'Diane Arbus')\n(76, 'Philip Guston')\n(78, 'Beyoncé Knowles')\n(80, 'Paul Cezanne')\n(80, 'Salvador Dalí')\n(82, 'Marcel Duchamp')\n(83, 'Britney Spears')\n(85, 'Cindy Sherman')\n(87, 'Gustav Klimt')\n"}},"pos":6,"start":1603416854223,"state":"done","type":"cell"}
{"cell_type":"code","end":1603416903299,"exec_count":11,"id":"2d1686","input":"### Your Code to Determine which artists have the most similar taste in colors\n### From all the artists in the list, determine which two artists have the most similar taste in colors\nt = []\n\n# loops through shorter each time\nfor p in list(ARTIST_RANKINGS.keys()):\n    for l in list(ARTIST_RANKINGS.keys())[list(ARTIST_RANKINGS.keys()).index(p)+1::]:\n        t.append((get_inversion_count(ARTIST_RANKINGS[l], ARTIST_RANKINGS[p])[1], (p, l)))\n\nprint('2 closest:\\n' + str(sorted(t)[0]))","kernel":"python3","output":{"0":{"name":"stdout","text":"2 closest:\n(44, ('Justin Timberlake', \"Georgia O'Keeffe\"))\n"}},"pos":8,"start":1603416903209,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":3,"id":"9028c4","input":"### DATA -- Do Not Change\nCOLORS = ['Turquoise', 'Blue', 'Purple', 'Sky Blue', 'Baby Blue', 'Red', 'Burnt Orange', 'Sea Foam Green', \n         'Teal', 'Magenta', 'Wild Watermelon', 'Thistle', 'Black', 'Violet', 'Green', 'Pink', 'Scarlet', 'Yellow', 'Copper', 'Orange']\n\n# This is the map showing which color corresponds to the number in each artists rankings\nCOLOR_MAP = {0: 'Turquoise',\n             1: 'Blue',\n             2: 'Purple',\n             3: 'Sky Blue',\n             4: 'Baby Blue',\n             5: 'Red',\n             6: 'Burnt Orange',\n             7: 'Sea Foam Green',\n             8: 'Teal',\n             9: 'Magenta',\n             10: 'Wild Watermelon',\n             11: 'Thistle',\n             12: 'Black',\n             13: 'Violet',\n             14: 'Green',\n             15: 'Pink',\n             16: 'Scarlet',\n             17: 'Yellow',\n\n             18: 'Copper',\n             19: 'Orange'\n            }\n\n# A dictionary of all the artists and their ranking from favorite to least favorite\n# For example, Adele's list starts with 1, 13, 3\n# So her top three colors are Blue, Violet and Sky Blue (probably for her work on SkyFall)\nARTIST_RANKINGS = {'Adele': (1, 13, 3, 7, 11, 6, 2, 0, 12, 15, 10, 14, 17, 18, 9, 19, 8, 16, 4, 5), 'Beyoncé Knowles': (7, 17, 2, 14, 11, 1, 15, 16, 0, 13, 8, 10, 6, 4, 19, 12, 5, 3, 9, 18), 'Eminem': (2, 12, 16, 1, 3, 15, 10, 9, 11, 0, 6, 14, 5, 8, 7, 18, 17, 4, 19, 13), 'Kanye West': (11, 7, 6, 17, 8, 15, 2, 1, 19, 18, 16, 9, 5, 4, 3, 10, 0, 12, 14, 13), 'Rihanna': (3, 1, 2, 7, 5, 10, 12, 11, 17, 15, 6, 4, 8, 19, 0, 14, 13, 18, 16, 9), 'Taylor Swift': (15, 3, 11, 9, 14, 16, 13, 7, 2, 8, 5, 19, 1, 6, 18, 0, 10, 4, 12, 17), 'Bruno Mars': (12, 3, 9, 10, 19, 0, 5, 8, 4, 7, 16, 15, 17, 18, 1, 2, 14, 11, 6, 13), 'Michael Jackson': (2, 8, 3, 17, 0, 16, 19, 5, 13, 18, 4, 12, 11, 6, 14, 15, 9, 1, 10, 7), 'Lady Gaga ': (15, 12, 13, 10, 9, 7, 8, 18, 5, 4, 2, 1, 17, 0, 19, 11, 14, 6, 16, 3), 'Ed Sheeran ': (8, 3, 12, 11, 15, 5, 7, 1, 19, 14, 4, 2, 10, 9, 18, 0, 17, 13, 6, 16), 'Jay-Z': (17, 1, 12, 7, 16, 8, 6, 3, 15, 19, 14, 11, 13, 10, 4, 18, 5, 0, 9, 2), 'Shakira': (0, 2, 15, 9, 16, 7, 10, 13, 4, 14, 18, 19, 6, 11, 1, 5, 17, 12, 3, 8), 'Linkin Park': (1, 13, 11, 4, 19, 12, 15, 3, 2, 18, 16, 8, 0, 10, 14, 5, 9, 17, 6, 7), 'Justin Bieber': (11, 7, 15, 6, 19, 10, 4, 9, 12, 14, 13, 17, 8, 0, 3, 16, 5, 18, 1, 2), 'Justin Timberlake': (18, 4, 13, 16, 3, 9, 1, 5, 7, 11, 2, 19, 17, 10, 8, 6, 14, 12, 15, 0), 'Katy Perry': (11, 17, 7, 12, 16, 13, 9, 1, 0, 4, 2, 3, 18, 19, 15, 10, 6, 8, 14, 5), 'Alicia Keys': (18, 19, 6, 0, 3, 8, 13, 5, 7, 9, 2, 16, 12, 11, 17, 14, 4, 15, 10, 1), 'Snoop Dogg': (8, 0, 12, 3, 15, 19, 11, 10, 5, 1, 16, 18, 2, 6, 7, 17, 14, 4, 9, 13), 'Britney Spears': (9, 0, 16, 15, 4, 10, 14, 19, 12, 5, 8, 2, 11, 7, 17, 3, 6, 18, 1, 13), 'P!nk': (12, 18, 11, 17, 14, 8, 19, 6, 9, 1, 10, 3, 4, 13, 0, 5, 16, 7, 15, 2), 'Lil Wayne': (4, 9, 2, 13, 6, 16, 8, 15, 0, 3, 12, 14, 1, 10, 7, 18, 17, 19, 11, 5), 'Christina Aguilera': (8, 0, 11, 15, 5, 10, 18, 1, 6, 13, 3, 12, 17, 2, 4, 19, 9, 14, 7, 16), 'Miley Cyrus': (7, 3, 16, 0, 10, 11, 18, 5, 12, 2, 9, 6, 17, 15, 1, 8, 14, 13, 19, 4), 'Chris Brown': (17, 14, 7, 19, 1, 12, 3, 0, 16, 11, 9, 8, 13, 2, 18, 15, 10, 6, 5, 4), 'Usher': (19, 0, 5, 13, 2, 4, 6, 12, 18, 10, 14, 8, 9, 1, 11, 7, 15, 17, 3, 16), 'XXXTentacion': (15, 10, 9, 16, 6, 2, 13, 18, 14, 8, 12, 3, 4, 7, 1, 5, 19, 11, 17, 0), 'Pablo Picasso': (1, 10, 9, 18, 0, 14, 19, 4, 12, 17, 15, 16, 2, 8, 13, 3, 11, 6, 7, 5), 'Paul Cezanne': (8, 18, 11, 16, 4, 10, 7, 0, 3, 19, 5, 12, 6, 13, 15, 14, 9, 17, 1, 2), 'Gustav Klimt': (0, 6, 8, 5, 4, 9, 16, 13, 1, 11, 12, 10, 19, 14, 15, 2, 3, 18, 17, 7), 'Claude Monet': (18, 7, 3, 9, 2, 6, 16, 11, 14, 5, 17, 10, 0, 15, 8, 13, 12, 1, 19, 4), 'Marcel Duchamp': (5, 10, 2, 8, 0, 14, 17, 15, 18, 4, 6, 19, 9, 3, 11, 16, 12, 13, 1, 7), 'Henri Matisse': (14, 5, 10, 17, 9, 6, 8, 19, 4, 0, 11, 13, 16, 3, 2, 15, 18, 1, 12, 7), 'Jackson Pollock': (19, 0, 4, 8, 13, 9, 12, 17, 1, 18, 11, 3, 6, 14, 7, 15, 16, 10, 2, 5), 'Andy Warhol': (1, 14, 3, 19, 18, 7, 2, 16, 12, 15, 5, 9, 8, 17, 10, 11, 6, 4, 0, 13), 'Salvador Dalí': (9, 6, 17, 14, 4, 0, 12, 10, 1, 15, 19, 16, 3, 13, 7, 8, 11, 5, 18, 2), 'Auguste Rodin': (5, 11, 9, 6, 3, 7, 0, 12, 19, 1, 15, 8, 16, 13, 2, 17, 18, 14, 4, 10), 'Mark Rothko': (9, 14, 12, 13, 10, 7, 2, 0, 6, 18, 1, 8, 5, 11, 17, 15, 4, 19, 16, 3), 'Rene Magritte': (13, 5, 6, 19, 10, 0, 9, 18, 1, 17, 14, 11, 3, 2, 7, 15, 8, 12, 4, 16), 'David Hockney': (5, 12, 7, 17, 3, 9, 19, 10, 13, 1, 8, 15, 6, 2, 14, 11, 16, 4, 0, 18), 'Philip Guston': (12, 8, 17, 19, 7, 1, 3, 10, 6, 2, 15, 5, 18, 11, 14, 4, 13, 16, 9, 0), 'Henri Cartier-Bresson': (0, 6, 18, 13, 16, 12, 10, 3, 5, 9, 11, 8, 7, 14, 17, 2, 19, 4, 1, 15), 'Pierre Bonnard': (10, 9, 4, 6, 5, 1, 13, 17, 11, 2, 15, 18, 0, 8, 14, 7, 3, 16, 19, 12), 'Jean-Michel Basquiat': (0, 15, 13, 17, 1, 12, 18, 10, 6, 2, 4, 5, 9, 11, 19, 3, 14, 7, 16, 8), 'Diane Arbus': (15, 12, 14, 1, 17, 11, 0, 6, 10, 3, 7, 16, 19, 5, 4, 8, 2, 13, 18, 9), \"Georgia O'Keeffe\": (4, 13, 8, 9, 5, 16, 7, 18, 6, 3, 1, 2, 19, 14, 17, 0, 10, 12, 11, 15), 'Cindy Sherman': (18, 4, 7, 19, 2, 6, 1, 8, 12, 5, 14, 11, 16, 15, 17, 3, 10, 9, 0, 13), 'Jeff Koons': (8, 2, 4, 17, 11, 15, 19, 12, 14, 10, 9, 18, 3, 6, 16, 1, 13, 7, 5, 0)}\n","kernel":"python3","pos":2,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"028a80","input":"### Questions 1 and 2\n\n1) Which artist has the most similar taste in colors to Matt?\n\n2) Which artist has the most similar taste in colors to you?\n","pos":3,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"901478","input":"### Favorite Colors Problem Set\n\nFor this project, I surveyed some of my favorite music and visual artists and asked them to rank their favorite colors from a list of 20 colors.\n\nFor example, **Jay-Z** responded with 5, 19, 12, 8, 15, 4, 17, 6, 0, 1, 16, 14, 11, 2, 7, 10, 13, 9, 3, 18:\n\nUsing the `COLOR_MAP` dictionary below I can see that his top five were **Red (5), Copper (19), Black (12), Teal (8), and Pink (15)**\n\n\nIn this problem set, you will write code to answer the following 3 questions:\n\n    1) Which artist has the most similar taste in colors to Matt?\n    \n    2) Which artist has the most similar taste in colors to you?\n    \n    3) Which two artists of all the artists have the most similar tastes to each other?\n\nTo accomplish this, you'll use the number of inversions to determine list similarity -- the fewer inversions, more similar are the lists.  You will have to think carefully with your partner to determine how to compare two lists for the number of inversions between their rankings.\n\n","pos":0,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"b24b42","input":"### The Data\nUse this to help you solve the parts below.  Do not change the contents of this cell.","pos":1,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"f24dc5","input":"### Question 3\n\n3) Which two artists of all the artists have the most similar tastes to each other?","pos":7,"state":"done","type":"cell"}
{"id":"c63398","input":"","pos":9,"state":"done","type":"cell"}
{"id":0,"time":1603397689220,"type":"user"}
{"last_load":1603406892950,"type":"file"}